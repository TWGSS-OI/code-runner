syntax = "proto3";
package coderun;

service CodeRunner {
    rpc StartSession(stream CommandRequest) returns (stream CommandResponse);
}

message CommandRequest {
    string id = 1;

    oneof command {
        PutFileRequest put = 2;
        RunCodeRequest run = 3;
        GetFileRequest get = 4;
    }
}

message CommandResponse {
    string id = 1; 

    oneof response {
        PutFileResponse put = 2;
        RunCodeResponse run = 3;
        GetFileResponse get = 4;
    }
}

enum RunStatus {
    SUCCESS = 0;
    TIME_LIMIT_EXCEEDED = 1;
    RUNTIME_ERROR = 2;
    SYSTEM_ERROR = 3;
}

message RunLimit {
    uint64 max_runtime = 1; // in milliseconds
    uint64 max_memory = 2; // in bytes
}

message PutFileRequest {
    string filename = 1;
    bytes content = 2;
}

message GetFileRequest {
    string filename = 1;
}


message RunCodeRequest {
    string command = 1;
    optional bytes input = 2;
    optional RunLimit limits = 3;
}

message PutFileResponse {
    uint32 length = 1; // length of the file content
}

message GetFileResponse {
    bytes content = 1;
}

message RunCodeResponse {
    bytes stdout = 1;
    bytes stderr = 2;
    RunStatus status = 3;
    uint64 runtime = 4;
    uint64 memory = 5;
    optional int32 exit_code = 6;
}